@model RecycleSystem.Models.TypeModel

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h2>Edit</h2>

    @using (Html.BeginForm("Edit/{id}", "Type", FormMethod.Post, new { @class = "form-horizontal", id = "myForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Types</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinKg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinKg, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinKg, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaxKg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxKg, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxKg, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row mt-4 mb-4">
                <div class="col-md-1">
                    <button type="submit" class="btn btn-success">Update</button>
                </div>
                <div class="col-md-1">
                    <button type="button" onclick="resetForm()" class="btn btn-primary">Reset</button>
                </div>
            </div>

        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "List")
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function resetForm() {
            document.getElementById("myForm").reset();
        }
    </script>
}
