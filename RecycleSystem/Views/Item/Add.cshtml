@model RecycleSystem.Models.ItemModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Add", "Item", FormMethod.Post, new { id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Items</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TypeModelId, "Recyclable Type", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("TypeModelId", ViewBag.RecyclableTypes as SelectList, "-- Select Recyclable Type --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModelId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, "Weight", htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", id = "Weight" })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComputedRate, "Computed Rate", htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.ComputedRate, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.ComputedRate, "", new { @class = "text-danger" })
        </div>


        <div class="row mt-4 mb-4">
            <div class="col-md-1">
                <button type="submit" class="btn btn-success">Create</button>
            </div>
            <div class="col-md-1">
                <button type="button" onclick="resetForm()" class="btn btn-primary">Reset</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function resetForm() {
            document.getElementById("myForm").reset();
            $('#ComputedRate').val('');
        }

        $(function () {
            // When the Recyclable Type dropdown changes
            $('#TypeModelId').change(function () {
                var recyclableTypeId = $(this).val();
                var weight = $('#Weight').val(); // Get the weight value

                // Make an AJAX request to fetch the rate for the selected Recyclable Type
                $.ajax({
                    url: '@Url.Action("GetRate", "Item")',
                    type: 'GET',
                    data: { recyclableTypeId: recyclableTypeId },
                    success: function (rate) {
                        // Compute the Computed Rate
                        var computedRate = rate * weight;

                        // Update the Computed Rate field with the calculated value
                        $('#ComputedRate').val(computedRate);
                    }
                });
            });

            // When the Weight input field changes
            $('#Weight').change(function () {
                var recyclableTypeId = $('#TypeModelId').val();
                var weight = $(this).val();

                // Make an AJAX request to fetch the rate for the selected Recyclable Type
                $.ajax({
                    url: '@Url.Action("GetRate", "Item")',
                    type: 'GET',
                    data: { recyclableTypeId: recyclableTypeId },
                    success: function (rate) {
                        // Compute the Computed Rate
                        var computedRate = rate * weight;

                        // Update the Computed Rate field with the calculated value
                        $('#ComputedRate').val(computedRate);
                    }
                });
            });
        });
    </script>
}

